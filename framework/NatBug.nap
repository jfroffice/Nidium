/* -----------------------------------------------------------------------------
 * Native Application Debugger (@) 2013 Stight.com                             * 
 * ----------------------------------------------------------------------------- 
 * Version: 	0.12
 * Author:		Vincent Fontaine
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */

var NatBug = {
	labels : {},
	values : {},

	props : [
		"id", "type", "label", "name", "left", "top", "width",
		"height", "paddingLeft", "paddingRight", "scale",
		"selected", "hover", "opacity", "_absx", "_absy", "radius",
		"hasFocus", "isOnTop", "background", "color",
		"lineWidth", "lineHeight", "fontSize", "fontType", "textAlign",
		"shadowBlur", "selection"
	],

	init : function(x=280, y=220){
		var self = this,
			lines = 0,
			col = 0;

		if (this.loaded) return false;

		this.loaded = true;

		this.application = new Application({
			id : "NatBug",
			left : x,
			top : y,
			width : 484,
			height : 328,
			background : "rgba(0, 80, 0, 0.35)",
			backgroundImage : "falcon/assets/back.png",
			radius : 8,
			opacity : 0.8
		});

		this.application.add("UILabel", {
			left : 417,
			top : 5,
			paddingLeft : 8,
			paddingRight : 8,
			height : 28,
			color : "#ffffff",
			background : "rgba(255, 255, 255, 0.04)",
			fontSize : 11,
			radius : 4,
			label : "NATBUG"
		});

		var	myTabs = [
			{
				label : "Properties",
				selected : true,
				background : "#882266",
				color : "#ffffff",
				fontSize : 11,
				closable : false
			},

			{
				label : "Network",
				background : "#882266",
				color : "#ffffff",
				fontSize : 11,
				closable : false
			}
		];

		this.tabController = this.application.add("UITabController", {
			name : "NatBugController",
			tabs : myTabs,
			left : 0,
			top : 3,
			height : 34
		});

		var k = 0;
		this.tabController.addEventListener("tabselect", function(e){
			var labels = Native.layout.getElementsByClassName("natbug_pane01");
			if (e.tab.label == "Properties") {
				labels.each(function(){
					this.fadeIn(150);
				});
			} else {
				labels.each(function(){
					this.fadeOut(150);
				});
			}
		});


		this.attachDragListener(this.tabController);
		this.attachDragListener(this.application);

		for (var l = 0; l<this.props.length; l++){
			var property = this.props[l],
				b1 = "rgba(0, 0, 0, 0.4)",
				b2 = "rgba(255, 255, 255, 0.05)";

			if (lines>=14){
				lines = 0;
				col++;
			}

			if (lines%2 == 0) {
				b1 = "rgba(0, 0, 0, 0.25)";
				b2 = "rgba(255, 255, 255, 0.075)";
			}

			this.createLine(property, lines, col, b1, b2);
			lines++;

		}

		this.show();
		Native.showFPS(true);
		Native.FPS.init();
		Native.__debugger = this.application;
		__DEBUG_SHOW_LAYERS__ = true;
		//__DEBUG_SHOW_ORDER__ = true;
	},

	createLine : function(property, line, col, b1, b2){
		this.labels[property] = this.application.add("UILabel", {
			paddingLeft : 5,
			left : 5 + 240*col,
			top : 44 + 20*line,
			width : 80,
			color : "#66aa66",
			background : b1,
			fontSize : 11,
			label : property
		});

		this.values[property] = this.application.add("UILabel", {
			paddingLeft : 5,
			left : 88 + 240*col,
			top : 44 + 20*line,
			width : 150,
			color : "#66aa66",
			background : b2,
			label : "",
			fontSize : 11,
			radius : 2
		});

		this.labels[property].addClass("natbug_pane01");
		this.values[property].addClass("natbug_pane01");

		this.attachDragListener(this.labels[property]);
		this.attachDragListener(this.values[property]);
	},

	attachDragListener : function(element){
		var self = this;
		element.addEventListener("drag", function(e){
			self.application.left += e.xrel;
			self.application.top += e.yrel;
		});
	},

	show : function(){
		var self = this;
		if (!this.loaded) return false;
		this.application.show();

		window.onElementUnderPointer = function(e){
			if (!self.application.isPointInside(e.x, e.y)){
				for (var l = 0; l<self.props.length; l++){
					var a = self.props[l];
					if (this[a] == undefined) {
						self.labels[a].color = "#66aa66";
						self.values[a].color = "#66aa66";
						self.values[a].label = 'n/a';
					} else {
						self.labels[a].color = "#ddffdd";
						self.values[a].color = "#ddffdd";
						self.values[a].label = this[a];
					}
					// + (this.parent ? " ("+this.parent[a]+")" : "");
				}
			}
		};
	},

	hide : function(){
		if (!this.loaded) return false;
		this.application.hide();
		delete(window.onElementUnderPointer);
	}

};

NatBug.init();
