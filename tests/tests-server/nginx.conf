user www-data;
worker_processes  2;

error_log  stderr;
pid        /var/run/nginx.pid;

daemon off;

events {
    worker_connections  19000;
    # multi_accept on;
}
worker_rlimit_nofile 100000;

http {
    include /usr/local/nginx/conf/mime.types;

    access_log  /dev/stdout;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    tcp_nodelay        on;
    server_tokens off;

    gzip  on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";


    charset UTF-8;

    # from https://cipherli.st/
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

    # Only the TLS protocol family
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    # This will block IE6, Android 2.3 and older Java version from accessing your site, but these are the safest settings.
    # ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ciphers "ALL";
    # ECDH key exchange prevents all known feasible cryptanalytic attacks
    ssl_ecdh_curve secp384r1;
    # 20MB of cache will host about 80000 sessions
    ssl_session_cache shared:SSL:20m;
    # Session expires every 3 hours
    ssl_session_timeout 180m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    # OCSP stapling using Google public DNS servers
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Content-Type-Options nosniff;

    ssl_dhparam /home/nidium/nginx/dhparams.pem;

    server {
        listen 8888;
        $NGINX_SSL_LISTEN

        $NGINX_SSL_CERT

        root   /home/nidium/tests/public/;

        server_name tests.nidium.com;
        keepalive_timeout 0s;

        location ^~ /.well-known {
            allow all;
            alias /home/nidium/certbot/www/.well-known/;
        }

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass http://127.0.0.1:8000;
        }
    }
}
